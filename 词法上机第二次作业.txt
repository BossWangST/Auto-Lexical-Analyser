词法上机的第二次作业：
实现一个简单的法分析程序的生成器。
功能：
输入：一个表达词法的文本文件
输出：一个C语言（或Java语言或你想使用的其它高级语言）的源程序

lex.txt-->你的词法分析程序的自动生成器-->词法分析源程序(如:lex.java)-->Java编译程序-->lex.class (该程序即可正确运行并进行词法分析了)

注意：输出生成的词法分析源程序，经过编译后，能正常运行并正确识别出相关的单词。




以Java语言为例（自动生成的词法分析程序是Java语言的形式）

表达词法的文本文件格式：lex.txt
# 以#开始的行是注释行。
# 下边定义标识符的正规式及可能需要插入的相关的Java代码。
# 这些代码将原封不动地拷贝到自动生成的词法分析程序。拷贝的位置由你程序决定（一般是当识别出标识符时要用Java代码处理并返回相关的结果，而返回的结果中有些不能在自动生成器中规定死）

(A|B|...|Z|a|b|...|z)(A|B|...|Z|a|b|...|z|0|1|...|9)*    %%[ 可能有的Java代码 %%]

# 下边定义的是整数单词
(0|1|...|9)(0|1|...|9)*    %%[ 可能有的Java代码 %%]

# ++ 运算符
++  %%[ 可能有的Java代码 %%]

# + 运算符
+  %%[ 可能有的Java代码 %%]

....(尽可能多的其它运算符、分隔符。见：手工写词法分析程序的状态图中单词)